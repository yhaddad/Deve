  /// \file Deve.cc
/*
 *
 * Deve.cc source template generated by fclass
 * Creation date : mar. sept. 24 2013
 *
 * This file is part of Deve libraries.
 *
 * Deve is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * Deve is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Deve.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author : Eté Rémi
 * @version
 * @copyright
 *
 *
 */



// std includes
#include <iostream>
#include <cstdlib>
#include <sstream>
#include <vector>
#include <stdexcept>


// lcio includes
#include "IO/LCReader.h"
#include "Exceptions.h"
#include "IOIMPL/LCFactory.h"
#include "EVENT/LCCollection.h"
#include "EVENT/CalorimeterHit.h"
#include "UTIL/CellIDDecoder.h"

// root includes
#include "TRint.h"
#include "TEveManager.h"
#include "TEveBox.h"
#include "TEveBrowser.h"
#include "TCanvas.h"
#include "TH2D.h"
#include "TH3D.h"
#include "TStyle.h"
#include "TView3D.h"
#include "TRootBrowser.h"

// deve includes
#include "EventDisplay.hh"
#include "EventLoader.hh"

#include "CalorimeterHitLoader.hh"

using namespace std;
using namespace deve;

// for debug messages (devel)
#define __DEBUG__ 0


void makeEventNavigator( TEveManager *eveManager );


int main (int argc ,char *argv[]) {


	if( argc < 2 ) {
		cerr << "-- ERROR --" << endl;
		cerr << "Usage : Deve lcioFile.slcio" << endl;
		exit( 1 );
	}

    TRint *deveApp = new TRint("Deve event display",0,0);
	string lcioFile = argv[1];

	EventDisplay *eventDisplay = new EventDisplay();

	CalorimeterHitLoader *caloHitLoader = new CalorimeterHitLoader();
	eventDisplay->registerObjectLoader( caloHitLoader );

	eventDisplay->initialize();

	try{

		eventDisplay->loadLcioFile( lcioFile );


	} catch (IO::IOException& e ) {
		cerr << e.what() << endl;
		cerr << "Deve have to stop. Sorry!" << endl;
		exit(1);
	}


	deveApp->Run();

	delete eventDisplay;
	delete deveApp;
	return 0;
}



void makeEventNavigator( TEveManager *eveManager ) {

	if( eveManager == 0 )
		return;

	gEve->GetMainWindow()->SetWindowName("Deve Event Display");

	eveManager->GetBrowser()->StartEmbedding( TRootBrowser::kLeft );



	eveManager->GetBrowser()->StopEmbedding("Event Navigator");
}






