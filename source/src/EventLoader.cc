  /// \file EventLoader.cc
/*
 *
 * EventLoader.cc source template generated by fclass
 * Creation date : mar. sept. 24 2013
 *
 * This file is part of XXX libraries.
 * 
 * XXX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * XXX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with XXX.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author : Et� R�mi
 * @version
 * @copyright
 *
 *
 */


#include "EventLoader.hh"

using namespace std;
using namespace EVENT;

namespace deve {

	EventLoader::EventLoader() {

	}

	EventLoader::~EventLoader() {

	}

	void EventLoader::loadEvent( LCEvent *evt , map<string , ObjectLoader*> &objLoaders ) {

		if( evt == 0 )
			return;

		TEveManager *eveManager = EventDisplay::getEveManager();

		if( eveManager == 0 )
			return;

		const vector<string> *collectionNames = evt->getCollectionNames();

		for( unsigned int c=0 ; c<collectionNames->size() ; c++ ) {

			cout << "Collection name : " << collectionNames->at( c ) << endl;

			LCCollection *lcCollection = evt->getCollection( collectionNames->at( c ) );
			map<string , ObjectLoader*>::iterator objLoaderIt = objLoaders.find( lcCollection->getTypeName() );

			if( objLoaderIt == objLoaders.end() )
				continue;
			else {
				objLoaderIt->second->loadObjectsFromLCCollection( lcCollection , collectionNames->at( c ) );
			}
		}

		eveManager->Redraw3D();

		return;
	}


}  // namespace 

